// このマクロ実行による再起動直後は、秀丸のリリース情報のページを表示する

if (getarg(0) != "") {
	jsmode "JScript\\" + currentmacrofilename;
    js {
        hidemaru.postExecMacroFile('"' + currentmacrodirectory() + "\\HmNewVersionReleaseInfo.mac" + '"');
    }
    endmacro;
} 


// 通常実行では、秀丸のダウンロード＆コピー

jsmode "JScript\\" + currentmacrofilename;
js {


var include_beta_download = true;  // 秀丸エディタβ版を取得対象に含むかどうか



var platFormAttribute = platform();

var currentMacroDirectory = currentmacrodirectory();

var currentMacroFileName = currentmacrofilename();

var hidemaruDir = hidemarudir();

var fso = createobject("Scripting.FileSystemObject");

var tempFolder = getUserTempFolder();

var saveHidemaruEditorPageFileFullPath = tempFolder + "\\hidemaru_editor_page.html";
{
	deletefile(saveHidemaruEditorPageFileFullPath);
	if (existfile(saveHidemaruEditorPageFileFullPath)) {
	   writeOutputPane(saveHidemaruEditorPageFileFullPath + "のファイルがロックされています");
	}
}

var saveHidemaruEditorInstallerFileFullPath = tempFolder + "\\hidemaru_editor_installer.zip";
{
	deletefile(saveHidemaruEditorInstallerFileFullPath);
	if (existfile(saveHidemaruEditorInstallerFileFullPath)) {
	   writeOutputPane(saveHidemaruEditorInstallerFileFullPath + "のファイルがロックされています");
	}
}

var extractFolder = tempFolder + "\\hidemaru_editor";

function deleteFilesInExtractFolder() {

	try {
	    // 3. ディレクトリが存在するか確認
	    if (fso.FolderExists(extractFolder)) {
		    var folderObj = fso.GetFolder(extractFolder);

		    var filesList = folderObj.Files;

		    var enumerator = new Enumerator(filesList);
		    for (; !enumerator.atEnd(); enumerator.moveNext()) {
		        var fileObj = enumerator.item();
		        try {
		            fileObj.Delete();
		        } catch (e) {
		        }
		    }

	    }

	} catch (e) {
	    ;
	} finally {
	    if (filesList) { filesList = null; }
	    if (folderObj) { folderObj = null; }
	}
}

var exe7ZipFileFullPath = currentmacrodirectory() + "\\7z.exe";
{
	if (!existfile(exe7ZipFileFullPath)) {
	   writeOutputPane(exe7ZipFileFullPath + "のファイルを発見できませんでした。");
    }
}

function getUserTempFolder() {
    var tempFolder = fso.GetSpecialFolder(2).Path;
    return(tempFolder);
}


var curlProcess = null; // インスタンスが消えると、非同期のonClose段階で元オブジェクトがなくなるので維持するため、グローバルに
function downloadHidemaruEditorPage(saveFileFullPath) {
    var command = 'curl "http://hide.maruo.co.jp/software/hidemaru.html" -o "' + saveFileFullPath + '"';
	curlProcess = hidemaru.runProcess(command, tempFolder, "stdio", "sjis");
    if (!curlProcess) {
		writeOutputPane("curlが実行できませんでした。");
        return;
    }

    curlProcess.onClose(onDownloadCompleteHidemaruEditorPage);
}


function onDownloadCompleteHidemaruEditorPage() {
	if (fso.FileExists(saveHidemaruEditorPageFileFullPath)) {
        writeOutputPane("curlによるページ保存に成功しました。");
        var hidemaruFileUrl = getHidemaruFileUrlFromPage(saveHidemaruEditorPageFileFullPath);
        downloadHidemaruFileFromUrl(hidemaruFileUrl);
    } else {
        writeOutputPane("curlによるページ保存に失敗しました。");
    }
}

function getHidemaruFileUrlFromPage(hidemaruEditorPageFileFullPath) {
   var pageText = hidemaru.loadTextFile(hidemaruEditorPageFileFullPath);

   var targetHmFileRegexp = getTargetHidemaruFileRegexp();
   if (targetHmFileRegexp.beta) {
       var matchBeta = pageText.match(targetHmFileRegexp.beta);
   }
   
   if (targetHmFileRegexp.release) {
       var matchRelease = pageText.match(targetHmFileRegexp.release);
   }

   // デフォルトはβ版
   var targetFileUrl = matchBeta;
   // β版が存在しないか、もしくは、βを含めないという指定がある場合
   if (!matchBeta || !include_beta_download) {
       targetFileUrl = matchRelease;
   }

   return targetFileUrl;
}

function getTargetHidemaruFileRegexp() {

	var is_hidemaru_64bit = platFormAttribute & 0x00080000;

	var is_hidemaru_32bit = !is_hidemaru_64bit;

	var is_hidemaru_float = platFormAttribute & 0x00400000;

	var is_hidemaru_int = !is_hidemaru_float;

    var release_regexp = "bin3?/hm" + (is_hidemaru_float ? "float" : "") + "[0-9]+" + (is_hidemaru_64bit ? "_x64" : "") + "_signed\\.exe";

    var betaver_regexp = "bin3?/hm" + (is_hidemaru_float ? "float" : "") + "[0-9]+b[0-9]+" + (is_hidemaru_64bit ? "_x64" : "") + "_signed\\.exe";

    return { "release": release_regexp, "beta" : betaver_regexp }
}

// 


function downloadHidemaruFileFromUrl(hidemaruFileUrl) {

    var absoluteUrl = "https://hide.maruo.co.jp/software/" + hidemaruFileUrl;

    var command = 'curl ' + absoluteUrl + ' -o "' + saveHidemaruEditorInstallerFileFullPath + '"';


	curlProcess = hidemaru.runProcess(command, tempFolder, "stdio", "sjis");
    if (!curlProcess) {
		writeOutputPane("curlが実行できませんでした。");
        return;
    }

    curlProcess.onClose(onDownloadCompleteHidemaruEditorInstaller);
}

function onDownloadCompleteHidemaruEditorInstaller() {
	if (fso.FileExists(saveHidemaruEditorPageFileFullPath)) {
        writeOutputPane("curlによるインストーラー取得に成功しました。");
        extractHidemaruInstallerFile();
    } else {
        writeOutputPane("curlによるインストーラー取得に失敗しました。");
    }
}


var exe7ZipProcess = null; // インスタンスが消えると、非同期のonClose段階で元オブジェクトがなくなるので維持するため、グローバルに
function extractHidemaruInstallerFile() {
    var command = '"' + exe7ZipFileFullPath + '" x "' + saveHidemaruEditorInstallerFileFullPath + '" -o"' + extractFolder + '"';
	exe7ZipProcess = hidemaru.runProcess(command, tempFolder, "stdio", "sjis");
    exe7ZipProcess.stdErr.onReadAll(readStdErrExtractHidemaruInstallerAsync);
    exe7ZipProcess.onClose(onExtractCompleteHidemaruEditorInstaller);
}

function readStdErrExtractHidemaruInstallerAsync(outputText) {
    writeOutputPane("秀丸インストーラーファイルの解凍中にエラーが発生しました");
}

function onExtractCompleteHidemaruEditorInstaller() {

    if ( fso.FileExists( extractFolder + "\\hidemaru.exe" ) ) {
        writeOutputPane("秀丸インストーラーファイルの解凍が成功しました。");
        runXCopy()
    } else {
        writeOutputPane("秀丸インストーラーファイルの解凍が失敗しました。");
    }
}

var xcopyProcess = null;
function runXCopy() {
    var command = '"' + currentMacroDirectory + '\\HmNewVersionDownloaderXCopy.bat" ' + '"' + extractFolder + '" "' + hidemaruDir + '" "' + currentMacroFileName + '"';
    xcopyProcess = hidemaru.runProcess(command, ".", "gui", "sjis");
    if (xcopyProcess) {
        writeOutputPane("HmNewVersionDownloaderXCopy.batを実行しますう。");
        hidemaru.setTimeout( function() { hidemaru.postExecMacroMemory("quitall"); }, 500 );
    } else {
       writeOutputPane("HmNewVersionDownloaderXCopy.batが見つかりませんでした。");
    }
}

// アウトプット枠メッセージ用
function writeOutputPane(text) {
    var dll = loaddll("HmOutputPane.dll");
    text = text.replace(/\r?\n/g, "\r\n");
    dll.dllFunc.Output(hidemaru.getCurrentWindowHandle(), text + "\r\n");
}


function main() {
    deleteFilesInExtractFolder();

    downloadHidemaruEditorPage(saveHidemaruEditorPageFileFullPath);
}

main();

}